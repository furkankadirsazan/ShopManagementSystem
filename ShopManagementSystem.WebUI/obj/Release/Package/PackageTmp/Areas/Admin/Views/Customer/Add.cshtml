@model Customers

<div class="row">
    <div class="col-md-12">

        <!--begin::Portlet-->
        <div class="kt-portlet">
            <div class="kt-portlet__head">
                <div class="kt-portlet__head-label">
                    <h3 class="kt-portlet__head-title">
                        Müşteri Ekle 
                                            
                    </h3>
                </div>
            </div>

            <!--begin::Form-->

            @using (Html.BeginForm("Add", "Customer", FormMethod.Post, new { enctype = "multipart/form-data", @class = "kt-form kt-form--label-right" }))
            {
                @Html.AntiForgeryToken()
                <div class="kt-portlet__body">
                    <div class="form-group form-group-last">
                        @if (!string.IsNullOrEmpty(TempData["Message"] as string))
                        {
                            <div class="@("alert " + TempData["ResultClass"] as string) fade show" role="alert">
                                <div class="alert-icon"><i class="flaticon-warning"></i></div>
                                <div class="alert-text">@(Html.Raw(TempData["Message"] as string))</div>
                                <div class="alert-close">
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true"><i class="la la-close"></i></span>
                                    </button>
                                </div>
                            </div>
                        }
                    </div>

                    <div class="form-group row">
                        <label for="ShopID" class="col-2 col-form-label"><font color="red">*</font> Mağaza</label>
                        <div class="col-10">
                            @Html.DropDownListFor(m => Model.ShopID, ViewBag.Shops as SelectList, "Seçiniz", new { @class = "selectpicker form-control", data_live_search = "true", id = "ShopID", required = "" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="Name" class="col-2 col-form-label"><font color="red">*</font> Müşteri Adı</label>
                        <div class="col-10">
                            @Html.TextBoxFor(m => Model.Name, new { id = "Name", name = "Name", @class = "form-control", type = "text", required = "" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="Surname" class="col-2 col-form-label"><font color="red">*</font> Müşteri Soyadı</label>
                        <div class="col-10">
                            @Html.TextBoxFor(m => Model.Surname, new { id = "Surname", name = "Surname", @class = "form-control", type = "text", required = "" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="Email" class="col-2 col-form-label"><font color="red">*</font> Email</label>
                        <div class="col-10">
                            @Html.TextBoxFor(m => Model.Email, new { id = "Email", name = "Email", @class = "form-control", type = "email", required = "" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="Phone" class="col-2 col-form-label"><font color="red">*</font> Telefon</label>
                        <div class="col-10">
                            @Html.TextBoxFor(m => Model.Phone, new { id = "Phone", name = "Phone", @class = "form-control", type = "number" })
                        </div>
                    </div>
                   
                    <div class="form-group row">
                        <label for="ProvinceID" class="col-2 col-form-label"><font color="red">*</font> İl</label>
                        <div class="col-10">
                            @Html.DropDownListFor(m => Model.ProvinceID, ViewBag.Provinces as SelectList, "Seçiniz", new { @class = "selectpicker form-control", data_live_search = "true", id = "ProvinceID", required = "" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="CountyID" class="col-2 col-form-label"><font color="red">*</font> İlçe</label>
                        <div class="col-10">
                            @Html.DropDownListFor(m => Model.CountyID, Enumerable.Empty<SelectListItem>(), "Seçiniz", new { @class = "selectpicker form-control", id = "CountyID", required = "" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="Address" class="col-2 col-form-label"><font color="red">*</font> Adres</label>
                        <div class="col-10">
                            @Html.TextAreaFor(m => Model.Address, new { id = "Address", name = "Address", @class = "form-control", type = "text", required = "" })
                        </div>
                    </div>
                </div>
                <div class="kt-portlet__foot">
                    <div class="kt-form__actions">
                        <div class="row">
                            <div class="col-2">
                            </div>
                            <div class="col-10">
                                <button type="submit" class="btn btn-success">Ekle</button>
                                <a href="/admin/customer/index" class="btn btn-warning">Geri</a>
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>

        <!--end::Portlet-->
    </div>

</div>

@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-switch/3.3.4/js/bootstrap-switch.js" integrity="sha256-+VCjCLUkzOOnKtJ0s04D3mcyypeENTag5Xivs9hQVKs=" crossorigin="anonymous"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.10/js/bootstrap-select.min.js" integrity="sha256-FXzZGmaRFZngOjUKy3lWZJq/MflaMpffBbu3lPT0izE=" crossorigin="anonymous"></script>
    <script type="text/javascript">
    $(document).ready(function () {
        $('#ProvinceID').change(function () {
            $("#CountyID").empty();
            var ProvinceId = $(this).val();
            if (ProvinceId != null && ProvinceId != '') {
                $.ajax({
                    type: "post",
                    url: '@Url.Action("Counties", "Customer")',
                    data: { provinceId: ProvinceId },
                    success: function (counties) {
                        $.each(counties, function (index, county) {
                            var optionhtml = '<option value="' + county.ID + '">' + county.Name + '</option>';
                            $("#CountyID").append(optionhtml);
                            $("#CountyID").selectpicker("refresh");
                        });
                    },
                    beforeSend: function () {
                        $("#ajax-loader").show();
                    },
                    complete: function () {
                        $("#ajax-loader").hide();
                    }
                });
            }
        });
    });
    </script>
}



